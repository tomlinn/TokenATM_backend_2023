package io.renren.modules.tokenatm.controller;

import io.renren.modules.tokenatm.entity.SpendLogEntity;
import io.renren.modules.tokenatm.service.LogRepository;
import io.renren.modules.tokenatm.service.Request.RequestLogBody;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.Date;

@RestController
// This means that this class is a Controller
public class SpendLogController {
    @Autowired // This means to get the bean called LogRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private LogRepository logRepository;

    @PostMapping(path="/add_log") // Map ONLY POST Requests
    public @ResponseBody String addLog (@RequestParam String user_id, @RequestParam String user_name, @RequestParam String type, @RequestParam Integer token_count, @RequestParam String source) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        SpendLogEntity n = new SpendLogEntity();
        n.setUser_id(user_id);
        n.setUser_name(user_name);
        n.setType(type);
        n.setTokenCount(token_count);
        n.setSourcee(source);
        n.setTimestamp(new Date());
        logRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/logs")
    public @ResponseBody Iterable<SpendLogEntity> getLogs() {
        // This returns a JSON or XML with the logs
        return logRepository.findAll();
    }

    @PostMapping(path="/logs/")
    public @ResponseBody Iterable<SpendLogEntity> getLogsForStudent(@RequestBody RequestLogBody body) {
        return logRepository.findByUserName(body.getName());
    }

    @GetMapping(path="/logs/{user_id}")
    public @ResponseBody Iterable<SpendLogEntity> getLogsForStudent(@PathVariable String user_id){

        return logRepository.findByUserId(user_id);
    }
}
